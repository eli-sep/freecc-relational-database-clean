FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'find' && lastCommand[1] === '-name' && lastCommand[2] === 'index.html' && /\/project\/website$/.test(cwd))

at Context.<anonymous> (test/940.test.js:9:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'find' && correctArgs && /\/project\/website$/.test(cwd))

at Context.<anonymous> (test/970.test.js:10:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(checkTouch || checkMV)

at Context.<anonymous> (test/1030.test.js:11:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(checkTouch || checkMV)

at Context.<anonymous> (test/1030.test.js:11:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(checkTouch || checkMV)

at Context.<anonymous> (test/1030.test.js:11:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(checkTouch || checkMV)

at Context.<anonymous> (test/1030.test.js:11:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(checkTouch || checkMV)

at Context.<anonymous> (test/1030.test.js:11:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(checkTouch || checkMV)

at Context.<anonymous> (test/1030.test.js:11:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(checkTouch || checkMV)

at Context.<anonymous> (test/1030.test.js:11:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(checkTouch || checkMV)

at Context.<anonymous> (test/1030.test.js:11:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(checkTouch || checkMV)

at Context.<anonymous> (test/1030.test.js:11:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(checkTouch || checkMV)

at Context.<anonymous> (test/1030.test.js:11:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(checkTouch || checkMV)

at Context.<anonymous> (test/1030.test.js:11:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(checkTouch || checkMV)

at Context.<anonymous> (test/1030.test.js:11:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(checkTouch || checkMV)

at Context.<anonymous> (test/1030.test.js:11:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(checkTouch || checkMV)

at Context.<anonymous> (test/1030.test.js:11:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(checkTouch || checkMV)

at Context.<anonymous> (test/1030.test.js:11:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(checkTouch || checkMV)

at Context.<anonymous> (test/1030.test.js:11:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(checkTouch || checkMV)

at Context.<anonymous> (test/1030.test.js:11:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(checkTouch || checkMV)

at Context.<anonymous> (test/1030.test.js:11:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(checkTouch || checkMV)

at Context.<anonymous> (test/1030.test.js:11:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(checkTouch || checkMV)

at Context.<anonymous> (test/1030.test.js:11:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(checkTouch || checkMV)

at Context.<anonymous> (test/1030.test.js:11:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'find' && lastCommand[1] === '-name' && lastCommand[2] === 'images' && /\/project\/website$/.test(cwd))

at Context.<anonymous> (test/1090.test.js:9:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'find' && lastCommand[1] === '-name' && lastCommand[2] === 'images' && /\/project\/website$/.test(cwd))

at Context.<anonymous> (test/1090.test.js:9:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'find' && lastCommand[1] === '-name' && lastCommand[2] === 'images' && /\/project\/website$/.test(cwd))

at Context.<anonymous> (test/1090.test.js:9:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'find' && lastCommand[1] === '-name' && lastCommand[2] === 'images' && /\/project\/website$/.test(cwd))

at Context.<anonymous> (test/1090.test.js:9:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'find' && lastCommand[1] === '-name' && lastCommand[2] === 'images' && /\/project\/website$/.test(cwd))

at Context.<anonymous> (test/1090.test.js:9:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'find' && lastCommand[1] === '-name' && lastCommand[2] === 'images' && /\/project\/website$/.test(cwd))

at Context.<anonymous> (test/1090.test.js:9:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'find' && lastCommand[1] === '-name' && lastCommand[2] === 'images' && /\/project\/website$/.test(cwd))

at Context.<anonymous> (test/1090.test.js:9:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'find' && lastCommand[1] === '-name' && lastCommand[2] === 'images' && /\/project\/website$/.test(cwd))

at Context.<anonymous> (test/1090.test.js:9:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'find' && lastCommand[1] === '-name' && lastCommand[2] === 'images' && /\/project\/website$/.test(cwd))

at Context.<anonymous> (test/1090.test.js:9:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'find' && lastCommand[1] === '-name' && lastCommand[2] === 'images' && /\/project\/website$/.test(cwd))

at Context.<anonymous> (test/1090.test.js:9:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'find' && lastCommand[1] === '-name' && lastCommand[2] === 'images' && /\/project\/website$/.test(cwd))

at Context.<anonymous> (test/1090.test.js:9:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'find' && lastCommand[1] === '-name' && lastCommand[2] === 'images' && /\/project\/website$/.test(cwd))

at Context.<anonymous> (test/1090.test.js:9:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'find' && lastCommand[1] === '-name' && lastCommand[2] === 'images' && /\/project\/website$/.test(cwd))

at Context.<anonymous> (test/1090.test.js:9:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'find' && lastCommand[1] === '-name' && lastCommand[2] === 'images' && /\/project\/website$/.test(cwd))

at Context.<anonymous> (test/1090.test.js:9:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'find' && lastCommand[1] === '-name' && lastCommand[2] === 'images' && /\/project\/website$/.test(cwd))

at Context.<anonymous> (test/1090.test.js:9:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'find' && lastCommand[1] === '-name' && lastCommand[2] === 'images' && /\/project\/website$/.test(cwd))

at Context.<anonymous> (test/1090.test.js:9:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'find' && lastCommand[1] === '-name' && lastCommand[2] === 'images' && /\/project\/website$/.test(cwd))

at Context.<anonymous> (test/1090.test.js:9:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(filesAreCorrect && lastCommand[0] === 'mv' && /header\.png$/.test(lastCommand[1]) && /client\/assets\/images/.test(lastCommand[2]))

at Context.<anonymous> (test/1100.test.js:11:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(filesAreCorrect && lastCommand[0] === 'mv' && /header\.png$/.test(lastCommand[1]) && /client\/assets\/images/.test(lastCommand[2]))

at Context.<anonymous> (test/1100.test.js:11:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'find' && lastCommand[1] === '-name' && lastCommand[2] === 'header.png' && /\/project\/website$/.test(cwd))

at Context.<anonymous> (test/1110.test.js:9:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'find' && lastCommand[1] === '-name' && lastCommand[2] === 'header.png' && /\/project\/website$/.test(cwd))

at Context.<anonymous> (test/1110.test.js:9:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'find' && lastCommand[1] === '-name' && lastCommand[2] === 'header.png' && /\/project\/website$/.test(cwd))

at Context.<anonymous> (test/1110.test.js:9:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'find' && lastCommand[1] === '-name' && lastCommand[2] === 'header.png' && /\/project\/website$/.test(cwd))

at Context.<anonymous> (test/1110.test.js:9:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'find' && lastCommand[1] === '-name' && lastCommand[2] === 'header.png' && /\/project\/website$/.test(cwd))

at Context.<anonymous> (test/1110.test.js:9:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'find' && lastCommand[1] === '-name' && lastCommand[2] === 'header.png' && /\/project\/website$/.test(cwd))

at Context.<anonymous> (test/1110.test.js:9:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'find' && lastCommand[1] === '-name' && lastCommand[2] === 'header.png' && /\/project\/website$/.test(cwd))

at Context.<anonymous> (test/1110.test.js:9:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'find' && lastCommand[1] === '-name' && lastCommand[2] === 'header.png' && /\/project\/website$/.test(cwd))

at Context.<anonymous> (test/1110.test.js:9:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'find' && lastCommand[1] === '-name' && lastCommand[2] === 'header.png' && /\/project\/website$/.test(cwd))

at Context.<anonymous> (test/1110.test.js:9:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(filesAreCorrect && lastCommand[0] === 'mv' && /images\/footer\.jpeg$/.test(lastCommand[1]) && /client\/assets\/images/.test(lastCommand[2]))

at Context.<anonymous> (test/1130.test.js:11:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'rmdir' && /images/.test(lastCommand[1]) && !/assets/.test(lastCommand[1]) && lastCommand[2] === undefined && /\/project\/website$/.test(cwd))

at Context.<anonymous> (test/1150.test.js:9:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(checkMkdir || checkMV)

at Context.<anonymous> (test/1200.test.js:11:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(checkMkdir || checkMV)

at Context.<anonymous> (test/1200.test.js:11:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(checkMkdir || checkMV)

at Context.<anonymous> (test/1200.test.js:11:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(checkMkdir || checkMV)

at Context.<anonymous> (test/1200.test.js:11:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(checkMkdir || checkMV)

at Context.<anonymous> (test/1200.test.js:11:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(checkMkdir || checkMV)

at Context.<anonymous> (test/1200.test.js:11:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(checkMkdir || checkMV)

at Context.<anonymous> (test/1200.test.js:11:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(checkMkdir || checkMV)

at Context.<anonymous> (test/1200.test.js:11:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(checkMkdir || checkMV)

at Context.<anonymous> (test/1200.test.js:11:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(checkMkdir || checkMV)

at Context.<anonymous> (test/1200.test.js:11:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(checkMkdir || checkMV)

at Context.<anonymous> (test/1200.test.js:11:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(checkMkdir || checkMV)

at Context.<anonymous> (test/1200.test.js:11:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(checkMkdir || checkMV)

at Context.<anonymous> (test/1200.test.js:11:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(filesAreCorrect && lastCommand[0] === 'mv' && /CodeAlly\.svg$/.test(lastCommand[1]) && /client\/assets\/icons/.test(lastCommand[2]))

at Context.<anonymous> (test/1210.test.js:11:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(filesAreCorrect && lastCommand[0] === 'mv' && /CodeAlly\.svg$/.test(lastCommand[1]) && /client\/assets\/icons/.test(lastCommand[2]))

at Context.<anonymous> (test/1210.test.js:11:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(filesAreCorrect && lastCommand[0] === 'mv' && /CodeRoad\.svg/.test(lastCommand[1]) && /client\/assets\/icons/.test(lastCommand[2]))

at Context.<anonymous> (test/1220.test.js:11:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(checkTouch || checkMV)

at Context.<anonymous> (test/1260.test.js:11:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(checkTouch || checkMV)

at Context.<anonymous> (test/1260.test.js:11:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(checkTouch || checkMV)

at Context.<anonymous> (test/1260.test.js:11:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'find' && /client\/assets\/fonts/.test(lastCommand[1]) && /\/project\/website$/.test(cwd))

at Context.<anonymous> (test/1275.test.js:9:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'find' && /client\/assets\/fonts/.test(lastCommand[1]) && /\/project\/website$/.test(cwd))

at Context.<anonymous> (test/1275.test.js:9:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(checkTouch || checkMV)

at Context.<anonymous> (test/1280.test.js:11:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(checkTouch || checkMV)

at Context.<anonymous> (test/1280.test.js:11:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(checkTouch || checkMV)

at Context.<anonymous> (test/1280.test.js:11:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(checkTouch || checkMV)

at Context.<anonymous> (test/1290.test.js:11:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'rm' && lastCommand[1] === '--help' && /\/project\/website$/.test(cwd))

at Context.<anonymous> (test/1310.test.js:9:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(websiteDirectory.indexOf('fonts') < 0 && lastCommand[0] === 'rm' && correctArgs)

at Context.<anonymous> (test/1315.test.js:13:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'echo' && lastCommand[1] === 'Yay!')

at Context.<anonymous> (test/1370.test.js:8:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'echo' && lastCommand[1] === 'Yay!')

at Context.<anonymous> (test/1370.test.js:8:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'echo' && lastCommand[1] === 'Yay!')

at Context.<anonymous> (test/1370.test.js:8:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'echo' && lastCommand[1] === 'I' && lastCommand[2] === 'made' && lastCommand[3] === 'this' && lastCommand[4] === 'boilerplate' && lastCommand[5].op === `>>` && /README\.md$/.test(lastCommand[6]))

at Context.<anonymous> (test/1400.test.js:8:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'echo' && lastCommand[1] === 'I' && lastCommand[2] === 'made' && lastCommand[3] === 'this' && lastCommand[4] === 'boilerplate' && lastCommand[5].op === `>>` && /README\.md$/.test(lastCommand[6]))

at Context.<anonymous> (test/1400.test.js:8:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'echo' && lastCommand[1] === 'I' && lastCommand[2] === 'made' && lastCommand[3] === 'this' && lastCommand[4] === 'boilerplate' && lastCommand[5].op === `>>` && /README\.md$/.test(lastCommand[6]))

at Context.<anonymous> (test/1400.test.js:8:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'echo' && lastCommand[1] === 'I' && lastCommand[2] === 'made' && lastCommand[3] === 'this' && lastCommand[4] === 'boilerplate' && lastCommand[5].op === `>>` && /README\.md$/.test(lastCommand[6]))

at Context.<anonymous> (test/1400.test.js:8:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'echo' && lastCommand[1] === 'I' && lastCommand[2] === 'made' && lastCommand[3] === 'this' && lastCommand[4] === 'boilerplate' && lastCommand[5].op === `>>` && /README\.md$/.test(lastCommand[6]))

at Context.<anonymous> (test/1400.test.js:8:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'echo' && lastCommand[1] === 'I' && lastCommand[2] === 'made' && lastCommand[3] === 'this' && lastCommand[4] === 'boilerplate' && lastCommand[5].op === `>>` && /README\.md$/.test(lastCommand[6]))

at Context.<anonymous> (test/1400.test.js:8:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'echo' && lastCommand[1] === 'I' && lastCommand[2] === 'made' && lastCommand[3] === 'this' && lastCommand[4] === 'boilerplate' && lastCommand[5].op === `>>` && /README\.md$/.test(lastCommand[6]))

at Context.<anonymous> (test/1400.test.js:8:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(filesAreCorrect && lastCommand[0] === 'cp' && correctArgs)

at Context.<anonymous> (test/1475.test.js:15:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(filesAreCorrect && lastCommand[0] === 'cp' && correctArgs)

at Context.<anonymous> (test/1475.test.js:15:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(filesAreCorrect && lastCommand[0] === 'cp' && correctArgs)

at Context.<anonymous> (test/1475.test.js:15:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(filesAreCorrect && lastCommand[0] === 'cp' && correctArgs)

at Context.<anonymous> (test/1475.test.js:15:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(filesAreCorrect && lastCommand[0] === 'cp' && correctArgs)

at Context.<anonymous> (test/1475.test.js:15:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(filesAreCorrect && lastCommand[0] === 'cp' && correctArgs)

at Context.<anonymous> (test/1475.test.js:15:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(filesAreCorrect && lastCommand[0] === 'cp' && correctArgs)

at Context.<anonymous> (test/1475.test.js:15:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(filesAreCorrect && lastCommand[0] === 'cp' && correctArgs)

at Context.<anonymous> (test/1475.test.js:15:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(filesAreCorrect && lastCommand[0] === 'cp' && correctArgs)

at Context.<anonymous> (test/1475.test.js:15:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(filesAreCorrect && lastCommand[0] === 'cp' && correctArgs)

at Context.<anonymous> (test/1475.test.js:15:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(filesAreCorrect && lastCommand[0] === 'cp' && correctArgs)

at Context.<anonymous> (test/1475.test.js:15:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(filesAreCorrect && lastCommand[0] === 'cp' && correctArgs)

at Context.<anonymous> (test/1475.test.js:15:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(filesAreCorrect && lastCommand[0] === 'cp' && correctArgs)

at Context.<anonymous> (test/1475.test.js:15:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(filesAreCorrect && lastCommand[0] === 'cp' && correctArgs)

at Context.<anonymous> (test/1475.test.js:15:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(filesAreCorrect && lastCommand[0] === 'cp' && correctArgs)

at Context.<anonymous> (test/1475.test.js:15:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(filesAreCorrect && lastCommand[0] === 'cp' && correctArgs)

at Context.<anonymous> (test/1475.test.js:15:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(filesAreCorrect && lastCommand[0] === 'cp' && correctArgs)

at Context.<anonymous> (test/1475.test.js:15:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(filesAreCorrect && lastCommand[0] === 'cp' && correctArgs)

at Context.<anonymous> (test/1475.test.js:15:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(filesAreCorrect && lastCommand[0] === 'cp' && correctArgs)

at Context.<anonymous> (test/1475.test.js:15:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(filesAreCorrect && lastCommand[0] === 'cp' && correctArgs)

at Context.<anonymous> (test/1475.test.js:15:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(filesAreCorrect && lastCommand[0] === 'cp' && correctArgs)

at Context.<anonymous> (test/1475.test.js:15:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(filesAreCorrect && lastCommand[0] === 'cp' && correctArgs)

at Context.<anonymous> (test/1475.test.js:15:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(filesAreCorrect && lastCommand[0] === 'cp' && correctArgs)

at Context.<anonymous> (test/1475.test.js:15:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(filesAreCorrect && lastCommand[0] === 'cp' && correctArgs)

at Context.<anonymous> (test/1475.test.js:15:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(filesAreCorrect && lastCommand[0] === 'cp' && correctArgs)

at Context.<anonymous> (test/1475.test.js:15:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(filesAreCorrect && lastCommand[0] === 'cp' && correctArgs)

at Context.<anonymous> (test/1475.test.js:15:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(filesAreCorrect && lastCommand[0] === 'cp' && correctArgs)

at Context.<anonymous> (test/1475.test.js:15:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(filesAreCorrect && lastCommand[0] === 'cp' && correctArgs)

at Context.<anonymous> (test/1475.test.js:15:5)
FAILED TEST LOG
  ✘ tests should pass

AssertionError [ERR_ASSERTION]: The expression evaluated to a falsy value:

assert(lastCommand[0] === 'find' && /toms-website/.test(lastCommand[1]) && /\/project$/.test(cwd))

at Context.<anonymous> (test/1490.test.js:9:5)
